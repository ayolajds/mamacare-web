{
  "version": 3,
  "sources": ["src/app/admin/dashboard/dashboard.ts", "src/app/admin/dashboard/dashboard.html"],
  "sourcesContent": ["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\n\r\ninterface Activity {\r\n  userName: string;\r\n  userEmail: string;\r\n  action: string;\r\n  date: Date;\r\n  status: string;\r\n}\r\n\r\ninterface AppointmentStats {\r\n  totalAppointments: number;\r\n  todayAppointments: number;\r\n  upcomingAppointments: number;\r\n  attendanceRate: number;\r\n  statusStats: { _id: string; count: number }[];\r\n}\r\n\r\ninterface UserStats {\r\n  totalUsers: number;\r\n  activeUsers: number;\r\n  inactiveUsers: number;\r\n  professionalsCount: number;\r\n  patientsCount: number;\r\n  volunteersCount: number;\r\n  newUsersThisMonth: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  standalone: true,\r\n  imports: [CommonModule, RouterModule],\r\n  templateUrl: './dashboard.html',\r\n  styleUrls: ['./dashboard.scss']\r\n})\r\nexport class Dashboard implements OnInit {\r\n  \r\n  stats: UserStats = {\r\n    totalUsers: 0,\r\n    activeUsers: 0,\r\n    inactiveUsers: 0,\r\n    professionalsCount: 0,\r\n    patientsCount: 0,\r\n    volunteersCount: 0,\r\n    newUsersThisMonth: 0\r\n  };\r\n\r\n  appointmentStats: AppointmentStats = {\r\n    totalAppointments: 0,\r\n    todayAppointments: 0,\r\n    upcomingAppointments: 0,\r\n    attendanceRate: 0,\r\n    statusStats: []\r\n  };\r\n\r\n  recentActivity: Activity[] = [];\r\n  \r\n  isLoading = true;\r\n  error: string | null = null;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  ngOnInit() {\r\n    this.loadDashboardData();\r\n  }\r\n\r\n  loadDashboardData() {\r\n    this.isLoading = true;\r\n    this.error = null;\r\n\r\n    // Cargar estadísticas de usuarios desde el endpoint REAL\r\n    this.loadUserStats();\r\n  }\r\n\r\n  loadUserStats() {\r\n    this.http.get<{success: boolean; data: any}>(`${environment.apiUrl}/admin/dashboard/stats`).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.processUserStats(response.data);\r\n          // Luego cargar stats de citas\r\n          this.loadAppointmentStats();\r\n        } else {\r\n          this.error = 'Error en la respuesta del servidor';\r\n          this.isLoading = false;\r\n        }\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading user stats:', error);\r\n        this.error = 'Error al cargar las estadísticas de usuarios';\r\n        this.isLoading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  processUserStats(backendData: any) {\r\n    console.log('Datos de usuarios recibidos:', backendData);\r\n    \r\n    // Mapear los datos del backend a nuestra interfaz\r\n    this.stats = {\r\n      totalUsers: backendData.totalUsers || 0,\r\n      activeUsers: backendData.activeUsers || 0,\r\n      inactiveUsers: backendData.inactiveUsers || 0,\r\n      professionalsCount: backendData.professionalsCount || 0,\r\n      patientsCount: backendData.patientsCount || 0,\r\n      volunteersCount: backendData.volunteersCount || 0,\r\n      newUsersThisMonth: backendData.newUsersThisMonth || 0\r\n    };\r\n  }\r\n\r\n  loadAppointmentStats() {\r\n    this.http.get<{success: boolean; data: any}>(`${environment.apiUrl}/appointments/admin/stats`).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.processAppointmentStats(response.data);\r\n        }\r\n        this.isLoading = false;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading appointment stats:', error);\r\n        // Si fallan las citas, al menos mostrar los usuarios\r\n        this.isLoading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  processAppointmentStats(statsData: any) {\r\n    console.log('Datos de citas recibidos:', statsData);\r\n    \r\n    // Citas totales\r\n    this.appointmentStats.totalAppointments = statsData.totalAppointments || 0;\r\n    \r\n    // Citas de hoy (usamos las citas programadas como aproximación)\r\n    this.appointmentStats.todayAppointments = this.calculateTodayAppointments(statsData);\r\n    \r\n    // Próximas sesiones (citas programadas)\r\n    this.appointmentStats.upcomingAppointments = this.calculateUpcomingAppointments(statsData);\r\n    \r\n    // Tasa de asistencia (completadas vs totales)\r\n    this.appointmentStats.attendanceRate = this.calculateAttendanceRate(statsData);\r\n    \r\n    this.appointmentStats.statusStats = statsData.statusStats || [];\r\n  }\r\n\r\n  calculateTodayAppointments(statsData: any): number {\r\n    const scheduled = statsData.statusStats?.find((s: any) => s._id === 'scheduled');\r\n    return scheduled?.count || 0;\r\n  }\r\n\r\n  calculateUpcomingAppointments(statsData: any): number {\r\n    const scheduled = statsData.statusStats?.find((s: any) => s._id === 'scheduled')?.count || 0;\r\n    const confirmed = statsData.statusStats?.find((s: any) => s._id === 'confirmed')?.count || 0;\r\n    return scheduled + confirmed;\r\n  }\r\n\r\n  calculateAttendanceRate(statsData: any): number {\r\n    const completed = statsData.statusStats?.find((s: any) => s._id === 'completed')?.count || 0;\r\n    const total = statsData.totalAppointments || 1;\r\n    \r\n    if (total === 0) return 0;\r\n    return Math.round((completed / total) * 100);\r\n  }\r\n\r\n  // Método público para usar en el template\r\n  calculatePercentage(part: number, total: number): number {\r\n    if (!total || total === 0) return 0;\r\n    return Math.round((part / total) * 100);\r\n  }\r\n\r\n  getAppointmentStatusClass(status: string): string {\r\n    const statusClasses: { [key: string]: string } = {\r\n      scheduled: 'scheduled',\r\n      confirmed: 'active',\r\n      in_progress: 'new',\r\n      completed: 'active',\r\n      cancelled: 'inactive'\r\n    };\r\n    return statusClasses[status] || 'inactive';\r\n  }\r\n\r\n  getAppointmentStatusDisplay(status: string): string {\r\n    const statusDisplay: { [key: string]: string } = {\r\n      scheduled: 'Programadas',\r\n      confirmed: 'Confirmadas',\r\n      in_progress: 'En Progreso',\r\n      completed: 'Completadas',\r\n      cancelled: 'Canceladas'\r\n    };\r\n    return statusDisplay[status] || status;\r\n  }\r\n\r\n  // Métodos para las tendencias (usando datos reales)\r\n  getUserGrowth(): number {\r\n    // Simular crecimiento basado en nuevos usuarios este mes\r\n    if (this.stats.totalUsers === 0 || this.stats.newUsersThisMonth === 0) return 0;\r\n    const previousUsers = this.stats.totalUsers - this.stats.newUsersThisMonth;\r\n    if (previousUsers <= 0) return 100;\r\n    return Math.round((this.stats.newUsersThisMonth / previousUsers) * 100);\r\n  }\r\n\r\n  getActiveGrowth(): number {\r\n    return this.calculatePercentage(this.stats.activeUsers, this.stats.totalUsers);\r\n  }\r\n\r\n  refreshData() {\r\n    this.loadDashboardData();\r\n  }\r\n}", "<div class=\"dashboard\">\r\n  <!-- Header -->\r\n  <div class=\"dashboard-header\">\r\n    <div class=\"header-content\">\r\n      <h1 class=\"dashboard-title\">Dashboard</h1>\r\n      <p class=\"dashboard-subtitle\">Resumen general del sistema Ma´Care</p>\r\n    </div>\r\n    <div class=\"header-actions\">\r\n      <button class=\"btn-refresh\" (click)=\"refreshData()\" [disabled]=\"isLoading\">\r\n        <svg class=\"refresh-icon\" [class.loading]=\"isLoading\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"></path>\r\n        </svg>\r\n        {{ isLoading ? 'Cargando...' : 'Actualizar' }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Estados de carga y error -->\r\n  <div *ngIf=\"isLoading\" class=\"loading-state\">\r\n    <div class=\"loading-spinner\"></div>\r\n    <p>Cargando datos del dashboard...</p>\r\n  </div>\r\n\r\n  <div *ngIf=\"error && !isLoading\" class=\"error-state\">\r\n    <div class=\"error-icon\">\r\n      <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n      </svg>\r\n    </div>\r\n    <h3>Error al cargar los datos</h3>\r\n    <p>{{ error }}</p>\r\n    <button class=\"btn-retry\" (click)=\"refreshData()\">Reintentar</button>\r\n  </div>\r\n\r\n  <!-- Contenido principal -->\r\n  <div *ngIf=\"!isLoading && !error\">\r\n    <!-- Estadísticas Principales - USUARIOS -->\r\n    <div class=\"stats-grid\">\r\n      <!-- Usuarios Totales -->\r\n      <div class=\"stat-card\">\r\n        <div class=\"stat-icon users\">\r\n          <svg class=\"icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\"></path>\r\n          </svg>\r\n        </div>\r\n        <div class=\"stat-content\">\r\n          <h3 class=\"stat-value\">{{ stats.totalUsers }}</h3>\r\n          <p class=\"stat-label\">Usuarios Totales</p>\r\n          <div class=\"stat-trend\" [class.positive]=\"getUserGrowth() > 0\" [class.negative]=\"getUserGrowth() < 0\">\r\n            <span>{{ getUserGrowth() > 0 ? '+' : '' }}{{ getUserGrowth() }}% crecimiento</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Usuarios Activos -->\r\n      <div class=\"stat-card\">\r\n        <div class=\"stat-icon active\">\r\n          <svg class=\"icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\"></path>\r\n          </svg>\r\n        </div>\r\n        <div class=\"stat-content\">\r\n          <h3 class=\"stat-value\">{{ stats.activeUsers }}</h3>\r\n          <p class=\"stat-label\">Usuarios Activos</p>\r\n          <div class=\"stat-trend positive\">\r\n            <span>{{ getActiveGrowth() }}% del total</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Nuevos este Mes -->\r\n      <div class=\"stat-card\">\r\n        <div class=\"stat-icon new\">\r\n          <svg class=\"icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 7l5 5m0 0l-5 5m5-5H6\"></path>\r\n          </svg>\r\n        </div>\r\n        <div class=\"stat-content\">\r\n          <h3 class=\"stat-value\">{{ stats.newUsersThisMonth }}</h3>\r\n          <p class=\"stat-label\">Nuevos este Mes</p>\r\n          <div class=\"stat-trend positive\" *ngIf=\"stats.newUsersThisMonth > 0\">\r\n            <span>+{{ stats.newUsersThisMonth }} registros</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Distribución de Roles -->\r\n      <div class=\"stat-card\">\r\n        <div class=\"stat-icon distribution\">\r\n          <svg class=\"icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\"></path>\r\n          </svg>\r\n        </div>\r\n        <div class=\"stat-content\">\r\n          <h3 class=\"stat-value\">{{ stats.professionalsCount + stats.patientsCount + stats.volunteersCount }}</h3>\r\n          <p class=\"stat-label\">Usuarios con Rol</p>\r\n          <div class=\"stat-breakdown\">\r\n            <span class=\"breakdown-item\">P: {{ stats.patientsCount }}</span>\r\n            <span class=\"breakdown-item\">Pr: {{ stats.professionalsCount }}</span>\r\n            <span class=\"breakdown-item\">V: {{ stats.volunteersCount }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Estadísticas Principales - CITAS -->\r\n    <div class=\"stats-grid\">\r\n      <!-- Citas Totales -->\r\n      <div class=\"stat-card\">\r\n        <div class=\"stat-icon appointments\">\r\n          <svg class=\"icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"></path>\r\n          </svg>\r\n        </div>\r\n        <div class=\"stat-content\">\r\n          <h3 class=\"stat-value\">{{ appointmentStats.totalAppointments }}</h3>\r\n          <p class=\"stat-label\">Citas Totales</p>\r\n          <div class=\"stat-trend positive\" *ngIf=\"appointmentStats.totalAppointments > 0\">\r\n            <span>{{ appointmentStats.totalAppointments }} sesiones</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Citas Hoy -->\r\n      <div class=\"stat-card\">\r\n        <div class=\"stat-icon today\">\r\n          <svg class=\"icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n          </svg>\r\n        </div>\r\n        <div class=\"stat-content\">\r\n          <h3 class=\"stat-value\">{{ appointmentStats.todayAppointments }}</h3>\r\n          <p class=\"stat-label\">Citas Hoy</p>\r\n          <div class=\"stat-trend\" [class.positive]=\"appointmentStats.todayAppointments > 0\">\r\n            <span>{{ appointmentStats.todayAppointments > 0 ? '+' : '' }}{{ appointmentStats.todayAppointments }} hoy</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Próximas Sesiones -->\r\n      <div class=\"stat-card\">\r\n        <div class=\"stat-icon upcoming\">\r\n          <svg class=\"icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 10V3L4 14h7v7l9-11h-7z\"></path>\r\n          </svg>\r\n        </div>\r\n        <div class=\"stat-content\">\r\n          <h3 class=\"stat-value\">{{ appointmentStats.upcomingAppointments }}</h3>\r\n          <p class=\"stat-label\">Próximas Sesiones</p>\r\n          <div class=\"stat-trend positive\" *ngIf=\"appointmentStats.upcomingAppointments > 0\">\r\n            <span>Próximos 7 días</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Tasa de Asistencia -->\r\n      <div class=\"stat-card\">\r\n        <div class=\"stat-icon attendance\">\r\n          <svg class=\"icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\r\n          </svg>\r\n        </div>\r\n        <div class=\"stat-content\">\r\n          <h3 class=\"stat-value\">{{ appointmentStats.attendanceRate }}%</h3>\r\n          <p class=\"stat-label\">Tasa de Asistencia</p>\r\n          <div class=\"stat-trend\" [class.positive]=\"appointmentStats.attendanceRate >= 80\" [class.negative]=\"appointmentStats.attendanceRate < 80\">\r\n            <span>{{ appointmentStats.attendanceRate >= 80 ? 'Excelente' : 'Por mejorar' }}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Métricas Detalladas -->\r\n    <div class=\"charts-grid\">\r\n      <!-- Tarjeta de Distribución -->\r\n      <div class=\"chart-card\">\r\n        <div class=\"chart-header\">\r\n          <h3 class=\"chart-title\">Distribución de Usuarios</h3>\r\n        </div>\r\n        <div class=\"distribution-visual\">\r\n          <div class=\"dist-item\">\r\n            <div class=\"dist-bar\">\r\n              <div class=\"dist-fill pacientes\" [style.width.%]=\"calculatePercentage(stats.patientsCount, stats.totalUsers)\"></div>\r\n            </div>\r\n            <div class=\"dist-info\">\r\n              <span class=\"dist-label\">Pacientes</span>\r\n              <span class=\"dist-value\">{{ stats.patientsCount }} ({{ calculatePercentage(stats.patientsCount, stats.totalUsers) }}%)</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"dist-item\">\r\n            <div class=\"dist-bar\">\r\n              <div class=\"dist-fill profesionales\" [style.width.%]=\"calculatePercentage(stats.professionalsCount, stats.totalUsers)\"></div>\r\n            </div>\r\n            <div class=\"dist-info\">\r\n              <span class=\"dist-label\">Profesionales</span>\r\n              <span class=\"dist-value\">{{ stats.professionalsCount }} ({{ calculatePercentage(stats.professionalsCount, stats.totalUsers) }}%)</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"dist-item\">\r\n            <div class=\"dist-bar\">\r\n              <div class=\"dist-fill voluntarios\" [style.width.%]=\"calculatePercentage(stats.volunteersCount, stats.totalUsers)\"></div>\r\n            </div>\r\n            <div class=\"dist-info\">\r\n              <span class=\"dist-label\">Voluntarios</span>\r\n              <span class=\"dist-value\">{{ stats.volunteersCount }} ({{ calculatePercentage(stats.volunteersCount, stats.totalUsers) }}%)</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Estado de Citas -->\r\n      <div class=\"chart-card\">\r\n        <div class=\"chart-header\">\r\n          <h3 class=\"chart-title\">Estado de Citas</h3>\r\n        </div>\r\n        <div class=\"status-grid\">\r\n          <div class=\"status-item\" *ngFor=\"let status of appointmentStats.statusStats\">\r\n            <div class=\"status-indicator\" [class]=\"getAppointmentStatusClass(status._id)\"></div>\r\n            <div class=\"status-info\">\r\n              <span class=\"status-value\">{{ status.count }}</span>\r\n              <span class=\"status-label\">{{ getAppointmentStatusDisplay(status._id) }}</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"status-item\" *ngIf=\"appointmentStats.statusStats.length === 0\">\r\n            <div class=\"status-indicator inactive\"></div>\r\n            <div class=\"status-info\">\r\n              <span class=\"status-value\">0</span>\r\n              <span class=\"status-label\">Sin citas</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Acciones Rápidas -->\r\n      <div class=\"actions-card\">\r\n        <div class=\"actions-header\">\r\n          <h3 class=\"actions-title\">Acciones Rápidas</h3>\r\n        </div>\r\n        <div class=\"actions-grid\">\r\n          <a routerLink=\"/admin/users/user-list\" class=\"action-item\">\r\n            <div class=\"action-icon\">\r\n              <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z\"></path>\r\n              </svg>\r\n            </div>\r\n            <span class=\"action-label\">Gestionar Usuarios</span>\r\n          </a>\r\n          <a routerLink=\"/admin/appointments\" class=\"action-item\">\r\n            <div class=\"action-icon\">\r\n              <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"></path>\r\n              </svg>\r\n            </div>\r\n            <span class=\"action-label\">Gestionar Sesiones</span>\r\n          </a>\r\n          <a routerLink=\"/admin/users/user-list\" class=\"action-item\">\r\n            <div class=\"action-icon\">\r\n              <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\"></path>\r\n              </svg>\r\n            </div>\r\n            <span class=\"action-label\">Ver Actividad</span>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>"],
  "mappings": "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",
  "names": []
}
