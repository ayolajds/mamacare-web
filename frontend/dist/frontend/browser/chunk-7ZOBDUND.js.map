{
  "version": 3,
  "sources": ["src/app/pages/auth/login/login.ts", "src/app/pages/auth/login/login.html"],
  "sourcesContent": ["import { Component, inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormsModule, NgForm } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n// 👇 tu AuthService está en app/services/auth.ts\r\nimport { AuthService, LoginRequest } from '../../../shared/services/auth';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  standalone: true,\r\n  imports: [FormsModule, CommonModule],\r\n  templateUrl: './login.html',\r\n  styleUrls: ['./login.scss']\r\n})\r\nexport class Login {\r\n  private router = inject(Router);\r\n  private auth = inject(AuthService);\r\n\r\n  email = '';\r\n  password = '';\r\n  showPassword = false;\r\n  loading = false;\r\n  errorMsg = '';\r\n\r\n  onSubmit(loginForm: NgForm) {\r\n    if (loginForm.invalid || this.loading) return;\r\n\r\n    const payload: LoginRequest = {\r\n      email: this.email.trim(),\r\n      password: this.password\r\n    };\r\n\r\n    this.loading = true;\r\n    this.errorMsg = '';\r\n\r\n    this.auth.login(payload).subscribe({\r\n      next: (res) => {\r\n        this.loading = false;\r\n        // ✅ token y user ya quedaron en localStorage por el servicio\r\n        this.router.navigate(['/profile']); // ← página de perfil\r\n      },\r\n      error: (err) => {\r\n        this.loading = false;\r\n        this.errorMsg = err?.error?.message || 'Credenciales incorrectas';\r\n      }\r\n    });\r\n  }\r\n\r\n  navigateToRegister() {\r\n    this.router.navigate(['/register']); // tus rutas del router\r\n  }\r\nnavigateToResetPassword() {\r\n  this.router.navigate(['/forgot-password']);\r\n}\r\n}\r\n", "<div class=\"login-wrapper\">\r\n  <div class=\"login-container card\">\r\n    <img src=\"/imagenes/login2.jpg\" alt=\"Imagen de inicio de sesión\" class=\"login-image\">\r\n    <h2 class=\"card-title\">Iniciar Sesión</h2>\r\n\r\n    <form (ngSubmit)=\"onSubmit(loginForm)\" #loginForm=\"ngForm\">\r\n      <div class=\"form-group\">\r\n        <input\r\n          type=\"email\"\r\n          [(ngModel)]=\"email\"\r\n          name=\"email\"\r\n          class=\"form-control\"\r\n          placeholder=\"Correo electrónico\"\r\n          required />\r\n      </div>\r\n\r\n      <div class=\"form-group position-relative\">\r\n        <input\r\n          [type]=\"showPassword ? 'text' : 'password'\"\r\n          [(ngModel)]=\"password\"\r\n          name=\"password\"\r\n          class=\"form-control\"\r\n          placeholder=\"Contraseña\"\r\n          required />\r\n        <button type=\"button\" class=\"toggle-password\" (click)=\"showPassword = !showPassword\">\r\n          <svg *ngIf=\"!showPassword\" class=\"icon-eye\" viewBox=\"0 0 24 24\">\r\n            <path d=\"M12 9a3 3 0 0 0-3 3a3 3 0 0 0 3 3a3 3 0 0 0 3-3a3 3 0 0 0-3-3m0 8a5 5 0 0 1-5-5a5 5 0 0 1 5-5a5 5 0 0 1 5 5a5 5 0 0 1-5 5m0-12.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5z\"/>\r\n          </svg>\r\n          <svg *ngIf=\"showPassword\" class=\"icon-eye-slash\" viewBox=\"0 0 24 24\">\r\n            <path d=\"M11.83 9L15 12.16C15 12.11 15 12.05 15 12c0-1.66-1.34-3-3-3c-.05 0-.11 0-.16 0l1.51 1.51c.06-.01.11-.01.16-.01c.83 0 1.5.67 1.5 1.5c0 .05 0 .11-.01.16l1.51 1.51c.05-.15.08-.31.08-.47c0-2.76-2.24-5-5-5c-.16 0-.32.03-.47.08L9.83 7h2.67zM2.81 2.81L1.39 4.22l3.24 3.24C3.83 8.69 3 10.75 3 12c0 2.21 1.79 4 4 4c1.25 0 2.31-.83 2.69-2.03l2.12 2.12C10.84 16.8 9.45 18 7 18c-3.31 0-6-2.69-6-6c0-1.45.55-2.76 1.44-3.76l-1.45-1.45l1.41-1.41l17 17l-1.41 1.41l-4.28-4.28L13 15.66c-.37.04-.75.07-1.14.07c-3.31 0-6-2.69-6-6c0-.39.03-.77.07-1.14L2.81 2.81zM7 10c0-.55.45-1 1-1c.17 0 .33.05.46.12l-1.34 1.34c-.07-.13-.12-.29-.12-.46zm9.72 5.57l-1.67-1.67c.13.04.27.07.42.07c.83 0 1.5-.67 1.5-1.5c0-.15-.03-.29-.07-.42l1.67 1.67c.05.15.08.31.08.47c0 2.76-2.24 5-5 5c-.16 0-.32-.03-.47-.08z\"/>\r\n          </svg>\r\n        </button>\r\n      </div>\r\n\r\n      <!-- Mensaje de error -->\r\n      <p *ngIf=\"errorMsg\" class=\"error\" style=\"color:#d21; margin:.5rem 0;\">\r\n        {{ errorMsg }}\r\n      </p>\r\n\r\n      <div class=\"button-group\">\r\n        <button type=\"submit\" class=\"btn-login\" [disabled]=\"loading || loginForm.invalid\">\r\n          <span *ngIf=\"loading\" class=\"loading-spinner\"></span>\r\n          {{ loading ? 'Ingresando...' : 'Ingresar' }}\r\n        </button>\r\n\r\n        <button type=\"button\" class=\"btn-register\" (click)=\"navigateToRegister()\">\r\n          Crear Cuenta\r\n        </button>\r\n      </div>\r\n    </form>\r\n\r\n    <p class=\"forgot-password\">\r\n      <a (click)=\"navigateToResetPassword()\">¿Has olvidado tu contraseña?</a>\r\n    </p>\r\n  </div>\r\n</div>\r\n"],
  "mappings": "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",
  "names": []
}
