{
  "version": 3,
  "sources": ["src/app/professional/cita-detalles/cita-detalles.ts", "src/app/professional/cita-detalles/cita-detalles.html"],
  "sourcesContent": ["import { Component, OnInit, OnDestroy, inject } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Router, RouterModule, ActivatedRoute } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n// Servicios\r\nimport { ProfessionalService, Appointment, AppointmentsResponse } from '../../shared/services/profesional';\r\nimport { AuthService } from '../../shared/services/auth';\r\n\r\n@Component({\r\n  selector: 'app-cita-detalles',\r\n  standalone: true,\r\n  imports: [CommonModule, RouterModule, FormsModule],\r\n  templateUrl: './cita-detalles.html',\r\n  styleUrls: ['./cita-detalles.scss']\r\n})\r\nexport class CitaDetalles implements OnInit, OnDestroy {\r\n  private professionalService = inject(ProfessionalService);\r\n  private authService = inject(AuthService);\r\n  private router = inject(Router);\r\n  private route = inject(ActivatedRoute);\r\n\r\n  // Datos de la cita\r\n  cita: Appointment | null = null;\r\n  \r\n  // Notas y observaciones\r\n  notas = {\r\n    notasPaciente: '',\r\n    notasProfesional: '',\r\n    notasInternas: ''\r\n  };\r\n\r\n  // Estados\r\n  isLoading = true;\r\n  error = '';\r\n  isEditing = false;\r\n  guardando = false;\r\n\r\n  private destroy$ = new Subject<void>();\r\n\r\n  ngOnInit(): void {\r\n    const citaId = this.route.snapshot.paramMap.get('id');\r\n    if (citaId) {\r\n      this.loadCitaDetails(citaId);\r\n    } else {\r\n      this.error = 'ID de cita no válido';\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  private loadCitaDetails(citaId: string): void {\r\n    this.isLoading = true;\r\n    this.error = '';\r\n\r\n    this.professionalService.getAppointments()\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe({\r\n        next: (response: AppointmentsResponse) => {\r\n          if (response?.success && response?.data?.docs) {\r\n            // Buscar la cita específica por ID\r\n            const citaEncontrada = response.data.docs.find((c: Appointment) => c._id === citaId);\r\n            \r\n            if (citaEncontrada) {\r\n              this.cita = citaEncontrada;\r\n              \r\n              // Cargar notas existentes\r\n              if (this.cita.notes) {\r\n                this.notas.notasPaciente = this.cita.notes;\r\n              }\r\n              \r\n              console.log('✅ Cita cargada:', this.cita);\r\n            } else {\r\n              this.error = 'Cita no encontrada';\r\n            }\r\n          } else {\r\n            this.error = 'Error al cargar los datos de citas';\r\n            console.error('Respuesta inválida:', response);\r\n          }\r\n          this.isLoading = false;\r\n        },\r\n        error: (error) => {\r\n          console.error('Error loading appointment details:', error);\r\n          this.error = 'Error al cargar los detalles de la cita';\r\n          this.isLoading = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  // Navegación\r\n  goBack(): void {\r\n    this.router.navigate(['/profesional/citas']);\r\n  }\r\n\r\n  goToCitas(): void {\r\n    this.router.navigate(['/profesional/citas']);\r\n  }\r\n\r\n  // Acciones de la cita - CON LLAMADAS REALES AL BACKEND\r\n  async cambiarEstado(nuevoEstado: string): Promise<void> {\r\n    if (!this.cita) return;\r\n\r\n    this.guardando = true;\r\n    try {\r\n      const response = await this.professionalService.updateAppointmentStatus(\r\n        this.cita._id, \r\n        nuevoEstado\r\n      ).toPromise();\r\n\r\n      if (response?.success && response.data) {\r\n        this.cita = response.data;\r\n        this.mostrarMensaje('Estado actualizado correctamente');\r\n      } else {\r\n        this.error = 'Error al actualizar el estado';\r\n      }\r\n    } catch (error) {\r\n      console.error('Error changing status:', error);\r\n      this.error = 'Error al cambiar el estado de la cita';\r\n    } finally {\r\n      this.guardando = false;\r\n    }\r\n  }\r\n\r\n  async guardarNotas(): Promise<void> {\r\n    if (!this.cita) return;\r\n\r\n    this.guardando = true;\r\n    try {\r\n      const response = await this.professionalService.updateAppointmentNotes(\r\n        this.cita._id,\r\n        this.notas.notasPaciente\r\n      ).toPromise();\r\n\r\n      if (response?.success && response.data) {\r\n        this.cita = response.data;\r\n        this.isEditing = false;\r\n        this.mostrarMensaje('Notas guardadas correctamente');\r\n      } else {\r\n        this.error = 'Error al guardar las notas';\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving notes:', error);\r\n      this.error = 'Error al guardar las notas';\r\n    } finally {\r\n      this.guardando = false;\r\n    }\r\n  }\r\n\r\n  private mostrarMensaje(mensaje: string): void {\r\n    // Podrías implementar un sistema de notificaciones aquí\r\n    console.log(mensaje);\r\n    // Opcional: Mostrar un toast o alerta al usuario\r\n    alert(mensaje); // Temporal - puedes reemplazar con un sistema de notificaciones\r\n  }\r\n\r\n  // ✅ GETTERS CORREGIDOS según tus estados del backend\r\n  get puedeConfirmar(): boolean {\r\n    // Solo se puede confirmar cuando está en estado 'scheduled'\r\n    return this.cita?.status === 'scheduled';\r\n  }\r\n\r\n  get estaConfirmada(): boolean {\r\n    return this.cita?.status === 'confirmed';\r\n  }\r\n\r\n  get estaEnProgreso(): boolean {\r\n    return this.cita?.status === 'in_progress';\r\n  }\r\n\r\n  get estaCompletada(): boolean {\r\n    return this.cita?.status === 'completed';\r\n  }\r\n\r\n  get estaCancelada(): boolean {\r\n    return this.cita?.status === 'cancelled';\r\n  }\r\n\r\n  get estaReprogramada(): boolean {\r\n    return this.cita?.status === 'rescheduled';\r\n  }\r\n\r\n  get noSePresento(): boolean {\r\n    return this.cita?.status === 'no_show';\r\n  }\r\n\r\n  // ✅ El profesional puede completar cuando está confirmada o en progreso\r\n  get puedeCompletar(): boolean {\r\n    return this.estaConfirmada || this.estaEnProgreso;\r\n  }\r\n\r\n  // ✅ El profesional puede cancelar en varios estados\r\n  get puedeCancelar(): boolean {\r\n    return this.cita?.status === 'scheduled' || \r\n           this.cita?.status === 'confirmed' ||\r\n           this.cita?.status === 'rescheduled';\r\n  }\r\n\r\n  // ✅ Puede marcar \"no se presentó\" cuando está confirmada\r\n  get puedeMarcarNoShow(): boolean {\r\n    return this.estaConfirmada;\r\n  }\r\n\r\n  // ✅ Puede iniciar consulta cuando está confirmada\r\n  get puedeIniciarConsulta(): boolean {\r\n    return this.estaConfirmada;\r\n  }\r\n\r\n  // Helper functions\r\n  formatTime(dateString: string): string {\r\n    try {\r\n      return new Date(dateString).toLocaleTimeString('es-ES', {\r\n        hour: '2-digit',\r\n        minute: '2-digit'\r\n      });\r\n    } catch {\r\n      return '--:--';\r\n    }\r\n  }\r\n\r\n  formatDate(dateString: string): string {\r\n    try {\r\n      return new Date(dateString).toLocaleDateString('es-ES', {\r\n        weekday: 'long',\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric'\r\n      });\r\n    } catch {\r\n      return 'Fecha inválida';\r\n    }\r\n  }\r\n\r\n  formatDateTime(dateString: string): string {\r\n    try {\r\n      return new Date(dateString).toLocaleString('es-ES', {\r\n        year: 'numeric',\r\n        month: 'short',\r\n        day: 'numeric',\r\n        hour: '2-digit',\r\n        minute: '2-digit'\r\n      });\r\n    } catch {\r\n      return 'Fecha inválida';\r\n    }\r\n  }\r\n\r\n  getStatusDisplay(status: string): string {\r\n    const statusMap: { [key: string]: string } = {\r\n      'scheduled': 'Programada',\r\n      'confirmed': 'Confirmada',\r\n      'in_progress': 'En Progreso',\r\n      'completed': 'Completada',\r\n      'cancelled': 'Cancelada',\r\n      'rescheduled': 'Reprogramada',\r\n      'no_show': 'No Se Presentó'\r\n    };\r\n    return statusMap[status] || status;\r\n  }\r\n\r\n  getStatusClass(status: string): string {\r\n    const classMap: { [key: string]: string } = {\r\n      'scheduled': 'status-scheduled',\r\n      'confirmed': 'status-confirmed',\r\n      'in_progress': 'status-in-progress',\r\n      'completed': 'status-completed',\r\n      'cancelled': 'status-cancelled',\r\n      'rescheduled': 'status-rescheduled',\r\n      'no_show': 'status-no-show'\r\n    };\r\n    return classMap[status] || '';\r\n  }\r\n\r\n  calcularHoraFin(): string {\r\n    if (!this.cita) return '--:--';\r\n    \r\n    try {\r\n      const fechaInicio = new Date(this.cita.date);\r\n      const fechaFin = new Date(fechaInicio.getTime() + this.cita.duration * 60000);\r\n      return fechaFin.toLocaleTimeString('es-ES', {\r\n        hour: '2-digit',\r\n        minute: '2-digit'\r\n      });\r\n    } catch {\r\n      return '--:--';\r\n    }\r\n  }\r\n\r\n  // Contactar paciente\r\n  contactarPaciente(tipo: 'email' | 'telefono'): void {\r\n    if (!this.cita) return;\r\n\r\n    if (tipo === 'email' && this.cita.patientId.email) {\r\n      window.open(`mailto:${this.cita.patientId.email}`, '_blank');\r\n    } else if (tipo === 'telefono' && this.cita.patientId.phone) {\r\n      window.open(`tel:${this.cita.patientId.phone}`, '_blank');\r\n    }\r\n  }\r\n\r\n  // Verificar si se puede editar notas\r\n  get puedeEditarNotas(): boolean {\r\n    return !this.estaCancelada;\r\n  }\r\n}", "<div class=\"cita-detalles-page\">\r\n  <!-- Header -->\r\n  <div class=\"page-header\">\r\n    <div class=\"header-content\">\r\n      <button class=\"btn-back\" (click)=\"goBack()\">\r\n        <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 19l-7-7m0 0l7-7m-7 7h18\"/>\r\n        </svg>\r\n        Volver a Citas\r\n      </button>\r\n      <h1>Detalles de la Cita</h1>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Loading State -->\r\n  <div *ngIf=\"isLoading\" class=\"loading-state\">\r\n    <div class=\"loading-spinner\"></div>\r\n    <p>Cargando detalles de la cita...</p>\r\n  </div>\r\n\r\n  <!-- Error State -->\r\n  <div *ngIf=\"error && !isLoading\" class=\"error-state\">\r\n    <div class=\"error-icon\">⚠️</div>\r\n    <h3>Error al cargar la cita</h3>\r\n    <p>{{ error }}</p>\r\n    <button class=\"btn-retry\" (click)=\"goToCitas()\">Volver a Citas</button>\r\n  </div>\r\n\r\n  <!-- Contenido principal -->\r\n  <div *ngIf=\"cita && !isLoading\" class=\"cita-content\">\r\n    <!-- Header de la cita -->\r\n    <div class=\"cita-header\">\r\n      <div class=\"cita-info-basic\">\r\n        <h2>{{ cita.title }}</h2>\r\n        <div class=\"cita-meta\">\r\n          <span class=\"cita-date\">{{ formatDate(cita.date) }}</span>\r\n          <span class=\"cita-time\">{{ formatTime(cita.date) }} - {{ calcularHoraFin() }}</span>\r\n          <span class=\"cita-duration\">({{ cita.duration }} minutos)</span>\r\n        </div>\r\n      </div>\r\n      <div class=\"cita-status\">\r\n        <span class=\"status-badge\" [class]=\"getStatusClass(cita.status)\">\r\n          {{ getStatusDisplay(cita.status) }}\r\n        </span>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Grid principal -->\r\n    <div class=\"details-grid\">\r\n      <!-- Columna izquierda: Información -->\r\n      <div class=\"details-column\">\r\n        <!-- Información del paciente -->\r\n        <div class=\"info-section\">\r\n          <h3>Información del Paciente</h3>\r\n          <div class=\"patient-card\">\r\n            <div class=\"patient-avatar\">\r\n              {{ cita.patientId.name[0] }}{{ cita.patientId.lastName[0] }}\r\n            </div>\r\n            <div class=\"patient-details\">\r\n              <h4>{{ cita.patientId.name }} {{ cita.patientId.lastName }}</h4>\r\n              <div class=\"patient-contact\">\r\n                <div class=\"contact-item\">\r\n                  <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"/>\r\n                  </svg>\r\n                  <span>{{ cita.patientId.email }}</span>\r\n                </div>\r\n                <div class=\"contact-item\" *ngIf=\"cita.patientId.phone\">\r\n                  <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\"/>\r\n                  </svg>\r\n                  <span>{{ cita.patientId.phone }}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"patient-actions\">\r\n              <button class=\"btn-action email\" \r\n                      (click)=\"contactarPaciente('email')\"\r\n                      title=\"Enviar email\">\r\n                <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"/>\r\n                </svg>\r\n              </button>\r\n              <button class=\"btn-action phone\" \r\n                      *ngIf=\"cita.patientId.phone\"\r\n                      (click)=\"contactarPaciente('telefono')\"\r\n                      title=\"Llamar\">\r\n                <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\"/>\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Detalles de la cita -->\r\n        <div class=\"info-section\">\r\n          <h3>Detalles de la Cita</h3>\r\n          <div class=\"details-list\">\r\n            <div class=\"detail-item\">\r\n              <span class=\"detail-label\">Tipo de cita:</span>\r\n              <span class=\"detail-value\">{{ cita.type }}</span>\r\n            </div>\r\n            <div class=\"detail-item\">\r\n              <span class=\"detail-label\">Fecha y hora:</span>\r\n              <span class=\"detail-value\">{{ formatDateTime(cita.date) }}</span>\r\n            </div>\r\n            <div class=\"detail-item\">\r\n              <span class=\"detail-label\">Duración:</span>\r\n              <span class=\"detail-value\">{{ cita.duration }} minutos</span>\r\n            </div>\r\n            <div class=\"detail-item\">\r\n              <span class=\"detail-label\">Estado:</span>\r\n              <span class=\"detail-value status\" [class]=\"getStatusClass(cita.status)\">\r\n                {{ getStatusDisplay(cita.status) }}\r\n              </span>\r\n            </div>\r\n            <div class=\"detail-item\">\r\n              <span class=\"detail-label\">Creada:</span>\r\n              <span class=\"detail-value\">{{ formatDateTime(cita.createdAt) }}</span>\r\n            </div>\r\n            <div class=\"detail-item\" *ngIf=\"cita.updatedAt !== cita.createdAt\">\r\n              <span class=\"detail-label\">Actualizada:</span>\r\n              <span class=\"detail-value\">{{ formatDateTime(cita.updatedAt) }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Columna derecha: Acciones y notas -->\r\n      <div class=\"actions-column\">\r\n        <!-- Acciones rápidas - FLUJO CORREGIDO SEGÚN BACKEND -->\r\n        <div class=\"actions-section\">\r\n          <h3>Gestión de Cita</h3>\r\n          <div class=\"actions-grid\">\r\n            \r\n            <!-- CONFIRMAR - Solo cuando está \"scheduled\" -->\r\n            <button class=\"btn-action confirm\" \r\n                    *ngIf=\"puedeConfirmar\"\r\n                    (click)=\"cambiarEstado('confirmed')\"\r\n                    [disabled]=\"guardando\">\r\n              <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\"/>\r\n              </svg>\r\n              Confirmar Disponibilidad\r\n            </button>\r\n            \r\n            <!-- EN PROGRESO - Cuando está \"confirmed\" -->\r\n            <button class=\"btn-action in-progress\" \r\n                    *ngIf=\"puedeIniciarConsulta\"\r\n                    (click)=\"cambiarEstado('in_progress')\"\r\n                    [disabled]=\"guardando\">\r\n              <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 10V3L4 14h7v7l9-11h-7z\"/>\r\n              </svg>\r\n              Iniciar Consulta\r\n            </button>\r\n            \r\n            <!-- COMPLETAR - Cuando está \"confirmed\" o \"in_progress\" -->\r\n            <button class=\"btn-action complete\" \r\n                    *ngIf=\"puedeCompletar\"\r\n                    (click)=\"cambiarEstado('completed')\"\r\n                    [disabled]=\"guardando\">\r\n              <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\r\n              </svg>\r\n              Marcar como Completada\r\n            </button>\r\n            \r\n            <!-- NO SE PRESENTÓ - Cuando está \"confirmed\" -->\r\n            <button class=\"btn-action no-show\" \r\n                    *ngIf=\"puedeMarcarNoShow\"\r\n                    (click)=\"cambiarEstado('no_show')\"\r\n                    [disabled]=\"guardando\">\r\n              <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.35 16.5c-.77.833.192 2.5 1.732 2.5z\"/>\r\n              </svg>\r\n              No Se Presentó\r\n            </button>\r\n            \r\n            <!-- CANCELAR - Disponible en varios estados -->\r\n            <button class=\"btn-action cancel\" \r\n                    *ngIf=\"puedeCancelar\"\r\n                    (click)=\"cambiarEstado('cancelled')\"\r\n                    [disabled]=\"guardando\">\r\n              <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"/>\r\n              </svg>\r\n              Cancelar Cita\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Estado actual informativo -->\r\n        <div class=\"status-section\">\r\n          <h3>Estado Actual</h3>\r\n          <div class=\"current-status\">\r\n            <p *ngIf=\"puedeConfirmar\" class=\"status-scheduled\">\r\n              ⏳ <strong>Esperando confirmación del profesional</strong><br>\r\n              Por favor confirma tu disponibilidad para atender esta cita.\r\n            </p>\r\n            <p *ngIf=\"estaConfirmada\" class=\"status-confirmed\">\r\n              ✅ <strong>Cita confirmada</strong><br>\r\n              Lista para ser atendida el {{ formatDate(cita.date) }}\r\n            </p>\r\n            <p *ngIf=\"estaEnProgreso\" class=\"status-in-progress\">\r\n              🔄 <strong>Consulta en progreso</strong><br>\r\n              La cita está siendo atendida actualmente.\r\n            </p>\r\n            <p *ngIf=\"estaCompletada\" class=\"status-completed\">\r\n              ✅ <strong>Cita completada</strong><br>\r\n              La consulta ha finalizado exitosamente.\r\n            </p>\r\n            <p *ngIf=\"estaCancelada\" class=\"status-cancelled\">\r\n              ❌ <strong>Cita cancelada</strong>\r\n            </p>\r\n            <p *ngIf=\"noSePresento\" class=\"status-no-show\">\r\n              🚫 <strong>Paciente no se presentó</strong>\r\n            </p>\r\n            <p *ngIf=\"estaReprogramada\" class=\"status-rescheduled\">\r\n              📅 <strong>Cita reprogramada</strong>\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Notas y observaciones -->\r\n        <div class=\"notes-section\">\r\n          <div class=\"section-header\">\r\n            <h3>Notas y Observaciones</h3>\r\n            <button *ngIf=\"!isEditing && puedeEditarNotas\" \r\n                    class=\"btn-edit\" \r\n                    (click)=\"isEditing = true\">\r\n              <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"/>\r\n              </svg>\r\n              Editar\r\n            </button>\r\n          </div>\r\n\r\n          <div *ngIf=\"!isEditing\" class=\"notes-content\">\r\n            <p *ngIf=\"notas.notasPaciente; else sinNotas\" class=\"notes-text\">\r\n              {{ notas.notasPaciente }}\r\n            </p>\r\n            <ng-template #sinNotas>\r\n              <p class=\"no-notes\">No hay notas para esta cita.</p>\r\n            </ng-template>\r\n          </div>\r\n\r\n          <div *ngIf=\"isEditing\" class=\"notes-editor\">\r\n            <textarea [(ngModel)]=\"notas.notasPaciente\" \r\n                      placeholder=\"Escribe aquí las notas de la cita...\"\r\n                      rows=\"6\"></textarea>\r\n            <div class=\"editor-actions\">\r\n              <button class=\"btn-secondary\" \r\n                      (click)=\"isEditing = false\">\r\n                Cancelar\r\n              </button>\r\n              <button class=\"btn-primary\" \r\n                      (click)=\"guardarNotas()\"\r\n                      [disabled]=\"guardando\">\r\n                <span *ngIf=\"!guardando\">💾 Guardar</span>\r\n                <span *ngIf=\"guardando\">Guardando...</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Información adicional -->\r\n        <div class=\"info-section\">\r\n          <h3>Información Adicional</h3>\r\n          <div class=\"additional-info\">\r\n            <p><strong>ID de la cita:</strong> {{ cita._id }}</p>\r\n            <p><strong>Profesional:</strong> Tú</p>\r\n            <p><strong>Plataforma:</strong> {{ cita.meetingPlatform || 'Presencial' }}</p>\r\n            <p *ngIf=\"cita.reason\"><strong>Motivo:</strong> {{ cita.reason }}</p>\r\n            <p *ngIf=\"cita.symptoms\"><strong>Síntomas:</strong> {{ cita.symptoms }}</p>\r\n            <p><strong>Prioridad:</strong> {{ cita.priority }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>"],
  "mappings": "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",
  "names": []
}
