{
  "version": 3,
  "sources": ["src/app/professional/pacientes/pacientes.ts", "src/app/professional/pacientes/pacientes.html"],
  "sourcesContent": ["import { Component, OnInit, OnDestroy, inject } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Router, RouterModule, ActivatedRoute } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n// Servicios\r\nimport { \r\n  ProfessionalService, \r\n  PatientsResponse \r\n} from '../../shared/services/profesional';\r\nimport { AuthService } from '../../shared/services/auth';\r\n\r\ninterface Patient {\r\n  _id: string;\r\n  name: string;\r\n  lastName: string;\r\n  email: string;\r\n  phone?: string;\r\n  birthDate?: string;\r\n  emergencyContact?: any;\r\n  createdAt: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-pacientes',\r\n  standalone: true,\r\n  imports: [CommonModule, RouterModule, FormsModule],\r\n  templateUrl: './pacientes.html',\r\n  styleUrls: ['./pacientes.scss']\r\n})\r\nexport class Pacientes implements OnInit, OnDestroy {\r\n  private professionalService = inject(ProfessionalService);\r\n  private authService = inject(AuthService);\r\n  private router = inject(Router);\r\n  private route = inject(ActivatedRoute);\r\n\r\n  // Lista de pacientes\r\n  pacientes: Patient[] = [];\r\n  filteredPacientes: Patient[] = [];\r\n  \r\n  // Filtros\r\n  filtros = {\r\n    search: ''\r\n  };\r\n\r\n  // Estados\r\n  isLoading = true;\r\n  error = '';\r\n  \r\n  // Paginación - ACTUALIZADO\r\n  pagination = {\r\n    currentPage: 1,\r\n    totalPages: 1,\r\n    totalPacientes: 0,\r\n    hasNext: false,\r\n    hasPrev: false\r\n  };\r\n\r\n  private destroy$ = new Subject<void>();\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    // Escuchar cambios en los query params\r\n    this.route.queryParams\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(params => {\r\n        this.filtros.search = params['search'] || '';\r\n        this.pagination.currentPage = parseInt(params['page']) || 1;\r\n        this.loadPacientes();\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  async loadPacientes(): Promise<void> {\r\n    this.isLoading = true;\r\n    this.error = '';\r\n\r\n    try {\r\n      const response = await this.professionalService.getPatients({\r\n        page: this.pagination.currentPage,\r\n        limit: 10,\r\n        search: this.filtros.search\r\n      }).toPromise();\r\n\r\n      if (response?.success && response.data) {\r\n        // ✅ CORREGIDO: Usar la estructura correcta\r\n        this.pacientes = response.data.docs || [];\r\n        this.filteredPacientes = [...this.pacientes];\r\n        \r\n        // ✅ ACTUALIZADO: Usar la estructura correcta de PaginatedResponse\r\n        this.pagination = {\r\n          currentPage: response.data.page || 1,\r\n          totalPages: response.data.totalPages || 1,\r\n          totalPacientes: response.data.totalDocs || 0,\r\n          hasNext: response.data.hasNextPage || false,\r\n          hasPrev: response.data.hasPrevPage || false\r\n        };\r\n\r\n        // Aplicar filtro de búsqueda local\r\n        this.aplicarFiltroBusqueda();\r\n      } else {\r\n        this.error = 'Error al cargar los pacientes';\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading patients:', error);\r\n      this.error = 'Error al cargar los pacientes. Por favor, intenta nuevamente.';\r\n      this.pacientes = [];\r\n      this.filteredPacientes = [];\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n\r\n  private aplicarFiltroBusqueda(): void {\r\n    if (!this.filtros.search) {\r\n      this.filteredPacientes = [...this.pacientes];\r\n      return;\r\n    }\r\n\r\n    const searchTerm = this.filtros.search.toLowerCase();\r\n    this.filteredPacientes = this.pacientes.filter(paciente => \r\n      paciente.name.toLowerCase().includes(searchTerm) ||\r\n      paciente.lastName.toLowerCase().includes(searchTerm) ||\r\n      paciente.email.toLowerCase().includes(searchTerm) ||\r\n      (paciente.phone && paciente.phone.toLowerCase().includes(searchTerm))\r\n    );\r\n  }\r\n\r\n  // Navegación\r\n  goToDashboard(): void {\r\n    this.router.navigate(['/Panel-profesional']);\r\n  }\r\n\r\n  // Filtros\r\n  onSearchChange(): void {\r\n    this.pagination.currentPage = 1;\r\n    this.aplicarFiltroBusqueda();\r\n    this.actualizarQueryParams();\r\n  }\r\n\r\n  limpiarFiltros(): void {\r\n    this.filtros.search = '';\r\n    this.pagination.currentPage = 1;\r\n    this.actualizarQueryParams();\r\n  }\r\n\r\n  private actualizarQueryParams(): void {\r\n    const queryParams: any = {};\r\n    \r\n    if (this.filtros.search) queryParams.search = this.filtros.search;\r\n    if (this.pagination.currentPage > 1) queryParams.page = this.pagination.currentPage;\r\n\r\n    this.router.navigate([], {\r\n      relativeTo: this.route,\r\n      queryParams,\r\n      queryParamsHandling: 'merge'\r\n    });\r\n  }\r\n\r\n  // Paginación\r\n  goToPage(page: number): void {\r\n    if (page >= 1 && page <= this.pagination.totalPages) {\r\n      this.pagination.currentPage = page;\r\n      this.actualizarQueryParams();\r\n    }\r\n  }\r\n\r\n  // ✅ MÉTODOS NUEVOS AGREGADOS PARA EL TEMPLATE\r\n\r\n  // Calcular edad a partir de la fecha de nacimiento\r\n  calculateAge(birthDate?: string): string {\r\n    if (!birthDate) return 'Edad no disponible';\r\n    \r\n    try {\r\n      const birth = new Date(birthDate);\r\n      const today = new Date();\r\n      let age = today.getFullYear() - birth.getFullYear();\r\n      const monthDiff = today.getMonth() - birth.getMonth();\r\n      \r\n      if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birth.getDate())) {\r\n        age--;\r\n      }\r\n      \r\n      return `${age} años`;\r\n    } catch {\r\n      return 'Fecha inválida';\r\n    }\r\n  }\r\n\r\n  // Contactar paciente por email o teléfono\r\n  contactarPaciente(paciente: Patient, tipo: 'email' | 'telefono'): void {\r\n    if (tipo === 'email' && paciente.email) {\r\n      window.open(`mailto:${paciente.email}`, '_blank');\r\n    } else if (tipo === 'telefono' && paciente.phone) {\r\n      window.open(`tel:${paciente.phone}`, '_blank');\r\n    } else {\r\n      alert(`No hay ${tipo} disponible para este paciente`);\r\n    }\r\n  }\r\n\r\n  // Ver detalles del paciente\r\n  viewPatientDetails(paciente: Patient): void {\r\n    // Aquí puedes navegar a una página de detalles del paciente si la tienes\r\n    // Por ahora mostraremos un alert con la información\r\n    const info = `\r\n      Nombre: ${paciente.name} ${paciente.lastName}\r\n      Email: ${paciente.email}\r\n      Teléfono: ${paciente.phone || 'No disponible'}\r\n      Fecha de nacimiento: ${paciente.birthDate ? this.formatDate(paciente.birthDate) : 'No disponible'}\r\n      Edad: ${this.calculateAge(paciente.birthDate)}\r\n      Registrado: ${this.formatDate(paciente.createdAt)}\r\n    `;\r\n    \r\n    alert(info);\r\n    \r\n    // O si tienes una ruta para detalles del paciente:\r\n    // this.router.navigate(['/profesional/pacientes', paciente._id]);\r\n  }\r\n\r\n  // Helper functions\r\n  formatDate(dateString: string): string {\r\n    try {\r\n      return new Date(dateString).toLocaleDateString('es-ES', {\r\n        day: 'numeric',\r\n        month: 'short',\r\n        year: 'numeric'\r\n      });\r\n    } catch {\r\n      return 'Fecha inválida';\r\n    }\r\n  }\r\n\r\n  getInitials(name: string, lastName: string): string {\r\n    return `${name[0]}${lastName[0]}`.toUpperCase();\r\n  }\r\n}", "<div class=\"pacientes-page\">\r\n  <!-- Header -->\r\n  <div class=\"page-header\">\r\n    <div class=\"header-content\">\r\n      <button class=\"btn-back\" (click)=\"goToDashboard()\">\r\n        <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 19l-7-7m0 0l7-7m-7 7h18\"/>\r\n        </svg>\r\n        Volver al Panel\r\n      </button>\r\n      <h1>Mis Pacientes</h1>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Filtros -->\r\n  <div class=\"filters-section\">\r\n    <div class=\"filters-grid\">\r\n      <div class=\"filter-group search-group\">\r\n        <label>Buscar Pacientes</label>\r\n        <input \r\n          type=\"text\" \r\n          [(ngModel)]=\"filtros.search\" \r\n          (input)=\"onSearchChange()\"\r\n          placeholder=\"Buscar por nombre, apellido, email...\"\r\n        >\r\n      </div>\r\n\r\n      <div class=\"filter-actions\">\r\n        <button class=\"btn-clear\" (click)=\"limpiarFiltros()\">\r\n          Limpiar Búsqueda\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Loading State -->\r\n  <div *ngIf=\"isLoading\" class=\"loading-state\">\r\n    <div class=\"loading-spinner\"></div>\r\n    <p>Cargando pacientes...</p>\r\n  </div>\r\n\r\n  <!-- Error State -->\r\n  <div *ngIf=\"error && !isLoading\" class=\"error-state\">\r\n    <div class=\"error-icon\">⚠️</div>\r\n    <h3>Error al cargar los pacientes</h3>\r\n    <p>{{ error }}</p>\r\n    <button class=\"btn-retry\" (click)=\"loadPacientes()\">Reintentar</button>\r\n  </div>\r\n\r\n  <!-- Pacientes List -->\r\n  <div *ngIf=\"!isLoading && !error\" class=\"pacientes-container\">\r\n    <div class=\"pacientes-header\">\r\n      <h2>Lista de Pacientes ({{ filteredPacientes.length }})</h2>\r\n      <div class=\"header-stats\">\r\n        <span class=\"stat-item\">Total: {{ pagination.totalPacientes || filteredPacientes.length }}</span>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"filteredPacientes.length === 0\" class=\"empty-state\">\r\n      <svg class=\"empty-icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\"/>\r\n      </svg>\r\n      <h3>No se encontraron pacientes</h3>\r\n      <p *ngIf=\"filtros.search\">No hay pacientes que coincidan con tu búsqueda \"{{ filtros.search }}\".</p>\r\n      <p *ngIf=\"!filtros.search\">Aún no tienes pacientes asignados.</p>\r\n      <button class=\"btn-primary\" (click)=\"limpiarFiltros()\">Ver todos los pacientes</button>\r\n    </div>\r\n\r\n    <div *ngIf=\"filteredPacientes.length > 0\" class=\"pacientes-grid\">\r\n      <div *ngFor=\"let paciente of filteredPacientes\" class=\"paciente-card\">\r\n        <div class=\"paciente-header\">\r\n          <div class=\"paciente-avatar\">\r\n            {{ getInitials(paciente.name, paciente.lastName) }}\r\n          </div>\r\n          <div class=\"paciente-basic-info\">\r\n            <h3 class=\"paciente-name\">{{ paciente.name }} {{ paciente.lastName }}</h3>\r\n            <p class=\"paciente-email\">{{ paciente.email }}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"paciente-details\">\r\n          <div class=\"detail-item\" *ngIf=\"paciente.phone\">\r\n            <svg class=\"detail-icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\"/>\r\n            </svg>\r\n            <span>{{ paciente.phone }}</span>\r\n          </div>\r\n\r\n          <div class=\"detail-item\" *ngIf=\"paciente.birthDate\">\r\n            <svg class=\"detail-icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"/>\r\n            </svg>\r\n            <span>\r\n              {{ formatDate(paciente.birthDate) }} \r\n              <span class=\"age\">({{ calculateAge(paciente.birthDate) }} años)</span>\r\n            </span>\r\n          </div>\r\n\r\n          <div class=\"detail-item\">\r\n            <svg class=\"detail-icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"/>\r\n            </svg>\r\n            <span>Registrado: {{ formatDate(paciente.createdAt) }}</span>\r\n          </div>\r\n\r\n          <div class=\"detail-item\" *ngIf=\"paciente.emergencyContact\">\r\n            <svg class=\"detail-icon\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M18.364 5.636l-3.536 3.536m0 5.656l3.536 3.536M9.172 9.172L5.636 5.636m3.536 9.192L5.636 18.364M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"/>\r\n            </svg>\r\n            <span>Contacto: {{ paciente.emergencyContact.name }}</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"paciente-actions\">\r\n          <button class=\"btn-action email\" \r\n                  (click)=\"contactarPaciente(paciente, 'email')\"\r\n                  title=\"Enviar email\">\r\n            <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"/>\r\n            </svg>\r\n          </button>\r\n          \r\n          <button class=\"btn-action phone\" \r\n                  *ngIf=\"paciente.phone\"\r\n                  (click)=\"contactarPaciente(paciente, 'telefono')\"\r\n                  title=\"Llamar\">\r\n            <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\">\r\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\"/>\r\n            </svg>\r\n          </button>\r\n\r\n          <button class=\"btn-secondary\" \r\n                  (click)=\"viewPatientDetails(paciente)\">\r\n            Ver Detalles\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Paginación -->\r\n    <div *ngIf=\"pagination.totalPages > 1\" class=\"pagination\">\r\n      <button \r\n        class=\"btn-pagination\" \r\n        [disabled]=\"!pagination.hasPrev\"\r\n        (click)=\"goToPage(pagination.currentPage - 1)\">\r\n        Anterior\r\n      </button>\r\n      \r\n      <span class=\"pagination-info\">\r\n        Página {{ pagination.currentPage }} de {{ pagination.totalPages }}\r\n      </span>\r\n      \r\n      <button \r\n        class=\"btn-pagination\" \r\n        [disabled]=\"!pagination.hasNext\"\r\n        (click)=\"goToPage(pagination.currentPage + 1)\">\r\n        Siguiente\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>"],
  "mappings": "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",
  "names": []
}
